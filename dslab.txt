random_forest.R

install.packages("randomForest")
install.packages("caTools")
library(randomForest)
library(caTools)
head(iris)
split<-sample.split(iris)
train<-subset(iris,split=="TRUE")
test<-subset(iris,split=="FALSE")
rf=randomForest(x=train[1:4],y=train$Species,ntree=500)
y_pred=predict(rf,newdata = test[1:4])
cmf=table(test$Species,y_pred)
plot(rf)
importance(rf)
varImpPlot(rf)

apriori.R
install.packages("arules")
install.packages("arulesViz")
install.packages("RColorBrewer")
library(arules)
library(arulesViz)
library(RColorBrewer)
data("Groceries")
rule<-apriori(Groceries,parameter = list(support=0.002,confidence=0.5))
inspect(rule[1:10])
itemFrequencyPlot(Groceries, topN = 10) 
plot(rule,method="graph")

clustering.R
#Hierarical Clustering
head(mtcars)
distance_mat<-dist(mtcars)
hcl<-hclust(distance_mat,method="average")
plot(hcl)
#KMeans Clustering
install.packages("ClusterR")
install.packages("cluster")
library(ClusterR)
library(cluster)
head(iris)
set.seed(300)
kms<-kmeans(iris[1:4],centers = 3,nstart = 20)
cm<-table(iris$Species,kms$cluster)
cm
plot(iris[1:2],col=kms$cluster)
clusplot(iris[1:2],kms$cluster)

linear_regression.R
#linear regression
library(caTools)
data <- data.frame(
  Years_Exp = c(1.1, 1.3, 1.5, 2.0, 2.2, 2.9, 3.0, 3.2, 3.2, 3.7),
  Salary = c(39343.00, 46205.00, 37731.00, 43525.00,
             39891.00, 56642.00, 60150.00, 54445.00, 64445.00, 57189.00)
)
plot(data$Years_Exp, data$Salary,pch=19)
split=sample.split(data$Salary)
train=subset(data, split == TRUE)
test=subset(data, split == FALSE)
md= lm(formula = Salary ~ Years_Exp,data = train)
coef(md)
ypred = predict(md, newdata = test)
library(ggplot2)
ggplot() + 
  geom_point(aes(x = train$Years_Ex, y = train$Salary),colour = 'red') +
  geom_line(aes(x = train$Years_Ex,y = predict(md, newdata = train)),colour = 'blue')

logistic_regression.R
#logistic regression
install.packages("caTools")
library(caTools)
head(mtcars)
set.seed(300)
split<-sample.split(mtcars$vs)
train<-subset(mtcars,split==TRUE)
test<-subset(mtcars,split==FALSE)
md<-glm(vs~hp+wt,data=mtcars,family = binomial())
md
pred<-predict(md,test)
pred<-ifelse(pred>0.5,1,0)
table(pred,test$vs)
install.packages("ROCR")
library(ROCR)
roc<-performance(prediction(pred,test$vs),measure = 'tpr',x.measure = 'fpr')
plot(roc)
